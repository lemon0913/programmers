# 그냥...이지했음...
# 딕셔너리 쓴 것은 괜찮은데 people은 안쓰는 방법이 있음
# def solution(n, words):
    
#     dic = {} # 단어를 저장하는 딕셔너리
#     people = [0 for _ in range(n)] # 각 사람이 몇번의 단어를 말했는지 저장하는 리스트
    
    
#     dic[words[0]] = 1
#     people[0] += 1
#     for i in range(1, len(words)):
#         before = words[i-1] # 이전에 말한 단어
#         now = words[i] # 지금 단어
        
#         i %= n # 숫자 보정(몇 번째 사람인지 보정)
#         people[i] += 1
        
#         # 만약 딕셔너리에 없는 단어를 말했다면 딕셔너리에 추가
#         if now not in dic:
#             dic[now] = 1

#         # 만약 딕셔너리에 있는 단어를 말했다면 [번호, 차례] 출력
#         else:
#             return [i+1, people[i]]
        
#         # 이전 단어에 이어서 말하지 못했다면 [번호, 차례] 출력
#         if before[-1] != now[0]:
#             return [i+1, people[i]]
    
#     # 탈락자가 발생하지 않은 경우         
#     return [0, 0]

# -----------------------------------------------------------

# 이게 people 안쓰는 방법..
# 조금만 생각을 해봤다면 연산으로 people을 대신할 수 있는걸 알았어야지!!! 
# def solution(n, words):
    
#     dic = {} # 단어를 저장하는 딕셔너리
         
#     dic[words[0]] = 1
#     for i in range(1, len(words)):
        
#         # 만약 딕셔너리에 없는 단어를 말했다면 딕셔너리에 추가
#         if words[i] not in dic:
#             dic[words[i]] = 1

#         # 만약 딕셔너리에 있는 단어를 말했다면 [번호, 차례] 출력
#         else:
#             return [i%n+1, i//n+1]
        
#         # 이전 단어에 이어서 말하지 못했다면 [번호, 차례] 출력
#         if words[i-1][-1] != words[i][0]:
#             return [i%n+1, i//n+1]
    
#     # 탈락자가 발생하지 않은 경우         
#     return [0, 0]

# ----------------------------------------------------------------------------------

# 딕셔너리 안쓰는 방법이 있네...
# 이 경우랑 전자랑 둘 다 시간은 짧게 걸림
def solution(n, words):
    
    
    for i in range(1, len(words)):
        
        if words[i-1][-1] != words[i][0] or words[i] in words[:i]:
            return [i%n+1, i//n+1]
    
    # 탈락자가 발생하지 않은 경우         
    return [0, 0]