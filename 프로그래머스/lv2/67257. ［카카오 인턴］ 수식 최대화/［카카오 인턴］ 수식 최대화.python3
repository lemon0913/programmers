# 이번거는 그래도 생각을 하고 풀었다
# 그래서 연산할 때 스택을 써야 한다는 것을 깨달았다..
from itertools import permutations
from collections import deque
def solution(expression):
    answer = []
    
    # 일단 어떤 연산자가 사용된건지 구하기
    array = set()
    express = []
    t = ''
    for e in expression:
        if e in('-','*','+'):
            array.add(e)
            express.append(int(t))
            t = ''
            express.append(e)
        else:
            t += e
    express.append(int(t))

    
    # 연산자의 우선 순위 구하기
    array = list(permutations(array, len(array)))
    
    # 우선 순위마다 연산 해보기
    for ar in array:
        ex = express
        for a in ar:
            stk = []
            ex = deque(ex)
            t = 0
            while ex:
                e = ex.popleft()
                if e == a:
                    t = stk.pop()
                    if a == '+':
                        stk.append(t+ex.popleft())
                    elif a == '-':
                        stk.append(t-ex.popleft())
                    else:
                        stk.append(t*ex.popleft())       
                    
                else:
                    stk.append(e)
        
            ex = stk
        
        answer.append(abs(stk[0]))
        
            
                    
                
    
    return max(answer)