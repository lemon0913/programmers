# 테스트케이스 마지막꺼에서만 실패....아깝...
# 아마도 '({)}'같은 케이스때문에 실패한 것 같다
# def test(s):
#     lst1 = [] # []
#     lst2 = [] # ()
#     lst3 = [] # {}
    
    
    
#     for i in s:
#         if i == '[':
#             lst1.append(i)
#         elif i == '(':
#             lst2.append(i)
#         elif i == '{':
#             lst3.append(i)
#         elif i == ']':
#             if len(lst1) == 0:
#                 return False
#             else:
#                 lst1.pop()
#         elif i == ')':
#             if len(lst2) == 0:
#                 return False
#             else:
#                 lst2.pop()
#         elif i == '}':
#             if len(lst3) == 0:
#                 return False
#             else:
#                 lst3.pop()
    
#     if len(lst1) == 0 and len(lst2) == 0 and len(lst3) == 0:
#         return True
#     else:
#         return False
        

# def solution(s):
#     answer = 0
#     if test(s) == True:
#         answer += 1
        
#     for i in range(len(s)-1):
#         s = s[1:]+s[0]
#         if test(s) == True:
#             answer += 1
            
#     return answer



# 잘 생각해보면 스택을 여러개 쓸 이유가 없다....
def test(s):
    st = []
    
    for i in s:
        if i == '[' or i == '(' or i == '{':
            st.append(i)
        else:
            if not st:
                return False
            tmp = st.pop()
            if i == ']' and tmp != '[':
                return False
            elif i == ')' and tmp != '(':
                return False
            elif i == '}' and tmp != '{':
                return False
    
    if not len(st): 
        return True
    else:
        return False
        

def solution(s):
    answer = 0
    if test(s) == True:
        answer += 1
        
    for i in range(len(s)-1):
        s = s[1:]+s[0]
        if test(s) == True:
            answer += 1
            
    return answer

# deque써서 rotate해도 시간은 비슷하게 걸리는듯
# from collections import deque
# def test(s):
#     st = []
    
#     for i in s:
#         if i == '[' or i == '(' or i == '{':
#             st.append(i)
#         else:
#             if not st:
#                 return False
#             tmp = st.pop()
#             if i == ']' and tmp != '[':
#                 return False
#             elif i == ')' and tmp != '(':
#                 return False
#             elif i == '}' and tmp != '{':
#                 return False
    
#     if not len(st): 
#         return True
#     else:
#         return False
        

# def solution(s):
#     answer = 0
#     s = deque(s)
#     if test(s):
#         answer += 1
        
#     for i in range(len(s)-1):
#         s.rotate(-1)
#         if test(s):
#             answer += 1
            
#     return answer